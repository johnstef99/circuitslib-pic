#init padding values
padding=0.2
textpad=0.12

# function to translate directions
# $1 direction (r(ight),d(own),l(eft),u(p))
define direction {
  if "$1"=="r" || "$1"=="" then {
    define forwards % right %
    define backwards % left %
    define upwards % up %
    define downwards % down %
  }
  if "$1"=="d" then {
    define forwards % down %
    define backwards % up %
    define upwards % right %
    define downwards % left %
  }
  if "$1"=="l" then {
    define forwards % left %
    define backwards % right %
    define upwards % up %
    define downwards % down %
  }
  if "$1"=="u" then {
    define forwards % up %
    define backwards % down %
    define upwards % left %
    define downwards % right %
  }
  if "$2"=="d" then {
    define textwards % downwards %
  } else {
    define textwards % upwards %
  }
}

# $1 direction
# $2 text
# $3 text position
define r {
  direction($1,$3)
  line forwards padding
  for i = 0 to 2 do {
    line upwards 0.05 forwards 0.02 then downwards 0.1 forwards 0.04 then upwards 0.05 forwards 0.02
  }
  move backwards 0.12 textwards textpad "$2"; move textwards -textpad forwards 0.12
  line forwards padding

}

# $1 up text
# $2 right text
# $3 down text
# $4 left text
define p {
  circle radius 0.0175 fill 1
  "$1" above at last circle .n
  " $2" ljust at last circle .e
  "$3" below at last circle .s
  "$4 " rjust at last circle .w
  move to last circle
}

# $1 direction
# $2 extra length
# default length is the padding value
define wire {
  direction($1)
  line forwards padding
  if "$1"=="" then {
    line padding
  }
  if "$2"!="" then {
    line $2
  }
}

# $1 direction
define ground {
  direction($1)
  padding = padding/10
  line forwards padding
  circle radius 0.01 fill 1
  move upwards 0.1
  line downwards 0.2
  move upwards 0.15 forwards 0.03
  line downwards 0.1
  move upwards 0.075 forwards 0.03
  line downwards 0.05
  move to last circle
  padding = padding*10
}

# $1 direction
# $2 text
# $3 text position
define cup {
# increase textpad for the cup
  textpad=textpad+0.03
  direction($1,$3)
  line forwards padding
  move upwards 0.1
  line downwards 0.2
# centering - printing text
  move forwards 0.015 upwards 0.1
  move textwards textpad "$2"; move textwards -textpad
  move forwards 0.015 downwards 0.1
# continue with the cup
  line upwards 0.2
  move downwards 0.1
  line forwards padding
# reset textpad
  textpad=textpad-0.03
}


# $1 direction
# $2 text
# $3 text position
define bat {
  direction($1,$3)
  textpad=textpad+0.03
# big line
  line forwards padding
  move upwards 0.1
  line downwards 0.2
# centering to put text
  move upwards 0.1 forwards 0.015
  move textwards textpad "$2"
  move textwards -textpad
  move downwards 0.1forwards 0.015
#small line
  move upwards 0.05
  line upwards 0.1
  move downwards 0.05
  line forwards padding
  textpad=textpad-0.03
}

define switch {
  switch_size=0.15
  direction($1)
  line forwards padding
  line forwards switch_size upwards 0.075
  move downwards 0.075
  line forwards padding
}
